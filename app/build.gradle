plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.devtools.ksp'
    id 'com.google.dagger.hilt.android'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists() && keystorePropertiesFile.canRead()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion=36
    buildToolsVersion='35.0.0'
    
    lintOptions {
        disable 'Deprecation'
        disable 'NullSafeMutableLiveData'
        abortOnError false
    }
    defaultConfig {
        applicationId "io.github.gmathi.novellibrary"
        minSdkVersion 23
        targetSdkVersion 36
        multiDexEnabled true
        versionCode 119
        versionName "0.26.1.beta"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        if (keystorePropertiesFile.exists() && keystorePropertiesFile.canRead()) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        debug {
            pseudoLocalesEnabled true
            getIsDefault().set(true)
        }

        release {
            if (keystorePropertiesFile.exists() && keystorePropertiesFile.canRead()) {
                signingConfig signingConfigs.release
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions = ["mode"]
    productFlavors {
        mirror {
            // Flavor adds a suffix to the package name, so the
            // build can be installed alongside the main build.
            dimension "mode"
            applicationIdSuffix ".mirror"
        }

        canary {
            // Flavor to enable leekCanary.
            dimension "mode"
        }

        normal {
            // Normal build.
            dimension "mode"
            getIsDefault().set(true)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        incremental true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
        freeCompilerArgs += [
            "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-opt-in=kotlinx.coroutines.FlowPreview",
            "-opt-in=kotlinx.serialization.ExperimentalSerializationApi",
            "-Xjvm-default=all"
        ]
    }

    // KSP configuration for optimal Hilt code generation
    ksp {
        arg("dagger.hilt.android.internal.disableAndroidSuperclassValidation", "true")
        arg("dagger.hilt.shareTestComponents", "true")
        arg("dagger.formatGeneratedSource", "disabled")
    }

    buildFeatures {
        dataBinding true
        viewBinding true
        buildConfig true
    }
    sourceSets {
        mirror {
            res {
                srcDirs 'src\\mirror\\res'
            }
        }
    }
    namespace 'io.github.gmathi.novellibrary'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    
    // AndroidX Core Libraries - Updated to latest versions
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.browser:browser:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.9.3'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.9.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.2.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.multidex:multidex:2.0.1'

    // Testing Dependencies - Updated and comprehensive
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.19.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:6.0.0'
    testImplementation 'io.mockk:mockk:1.14.5'
    testImplementation 'org.robolectric:robolectric:4.16'
    testImplementation 'androidx.test:core:1.7.0'
    testImplementation 'androidx.test:runner:1.7.0'
    testImplementation 'androidx.test:rules:1.7.0'
    testImplementation 'androidx.test.ext:junit:1.3.0'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    
    // Android Testing
    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
    androidTestImplementation 'androidx.test:runner:1.7.0'
    androidTestImplementation 'androidx.test:rules:1.7.0'
    
    // Hilt Testing
    testImplementation 'com.google.dagger:hilt-android-testing:2.57.1'
    kspTest 'com.google.dagger:hilt-compiler:2.57.1'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.57.1'
    kspAndroidTest 'com.google.dagger:hilt-compiler:2.57.1'
    // HTML Parsing and Utilities
    implementation 'org.jsoup:jsoup:1.21.2'
    implementation 'org.greenrobot:eventbus:3.3.1'

    // UI Libraries
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.github.medyo:fancybuttons:1.8.3'
    implementation 'com.ogaclejapan.smarttablayout:library:2.0.0@aar'
    implementation 'jp.wasabeef:recyclerview-animators:4.0.2'
    implementation 'nl.dionsegijn:konfetti:1.3.2'

    // Firebase UI
    implementation('com.firebaseui:firebase-ui-auth:8.0.2', {
        exclude group: 'com.google.firebase'
        exclude group: 'com.google.android.gms'
        exclude group: 'com.android.support'
        exclude group: 'com.google.api-client'
        exclude group: 'com.google.apis'
    })

    // Material Dialogs
    final material_dialogs_version = '3.3.0'
    implementation "com.afollestad.material-dialogs:core:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:input:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:color:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:lifecycle:$material_dialogs_version"

    // Google Play Services - Updated versions
    implementation "com.google.android.gms:play-services-gcm:17.0.0"
    implementation "com.google.android.gms:play-services-drive:17.0.0"
    implementation 'com.google.android.gms:play-services-auth:21.4.0'

    // WorkManager - Updated
    def work_version = '2.10.3'
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-gcm:$work_version"
    testImplementation "androidx.work:work-testing:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"

    // Lifecycle (deprecated extension removed)
    // implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0' // Deprecated - removed

    // Animation and UI
    implementation 'com.airbnb.android:lottie:6.6.7'
    implementation 'com.github.chimbori:crux:2.2.0'

    // Dependency Injection - Hilt
    implementation 'com.google.dagger:hilt-android:2.57.1'
    ksp 'com.google.dagger:hilt-compiler:2.57.1'
    
    // Hilt ViewModel integration
    implementation 'androidx.hilt:hilt-navigation-fragment:1.2.0'
    
    // Hilt WorkManager integration
    implementation 'androidx.hilt:hilt-work:1.2.0'
    ksp 'androidx.hilt:hilt-compiler:1.2.0'

    // Temporary Injekt for migration bridge (will be removed in final cleanup)
    implementation "uy.kohesive.injekt:injekt-core:1.16.1"



    // Network client - Keep alpha version for compatibility
    final okhttp_version = '5.1.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp-dnsoverhttps:$okhttp_version"
    implementation 'com.squareup.okio:okio:3.16.0'

    // TLS 1.3 support for Android < 10
    implementation 'org.conscrypt:conscrypt-android:2.5.3'

    // REST - Keep compatible version
    final retrofit_version = '3.0.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0'
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Memory Leak Detection
    canaryImplementation 'com.squareup.leakcanary:leakcanary-android:2.14'

    // Image Loading - Updated Glide
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    ksp 'com.github.bumptech.glide:ksp:4.16.0'

    // Kotlin Standard Library
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.2.10"

    // Coroutines - Updated to latest stable
    final kotlinx_coroutines_version = '1.10.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
    
    // Coroutines testing
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_version"

    // Kotlin Serialization - Updated
    final kotlinSerializationVersion = '1.7.3'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinSerializationVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-protobuf:$kotlinSerializationVersion"
    implementation 'com.google.code.gson:gson:2.13.1'
    implementation "com.github.salomonbrys.kotson:kotson:2.5.0"

    // Image library - Updated Coil
    final coilVersion = '2.7.0'
    implementation("io.coil-kt:coil:$coilVersion")
    implementation("io.coil-kt:coil-gif:$coilVersion")

    // Progress Bar
    implementation 'com.github.tingyik90:snackprogressbar:6.4.2'

    // Firebase - Updated BoM and individual libraries
    implementation platform('com.google.firebase:firebase-bom:34.2.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-config'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-auth'

    // Markdown parser - Updated
    implementation 'org.jetbrains:markdown:0.7.3'
}

tasks.register('countTranslations') {
    File json = file('src\\main\\assets\\translations.json')

    Set<File> resources = fileTree('src\\main\\res')
            .files.findAll { (it.name == 'strings.xml') }
    File englishResources = resources.find { it.parentFile.name == 'values' }
    resources.remove(englishResources)

    List<String> englishStrings = englishResources.text.readLines()
            .findAll { it.trim().startsWith('<string name="') && !it.contains('translatable="false"') && it.endsWith('</string>') }
            .collect { it.trim().split('">')[1].split('</')[0] }

    json.text = '{\r\n  "en": "' + englishStrings.size() + '"'

    resources.each { resource ->
        List<String> strings = resource.text.readLines()
                .findAll { it.trim().startsWith('<string name="') && !it.contains('translatable="false"') && it.endsWith('</string>') }
                .collect { it.trim().split('">')[1].split('</')[0] }
                .findAll { !englishStrings.contains(it) }
        json.text += ',\r\n  "' + resource.parentFile.name.split('-')[1] + '": "' + strings.size() + '"'
    }

    json.text += '\r\n}'
    //print(json.text)
}

repositories {
    google()
    mavenCentral()
    maven { url "https://maven.google.com" }
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}

// Apply build performance monitoring
apply from: '../scripts/build-performance-monitor.gradle'
